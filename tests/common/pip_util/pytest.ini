[pytest]
# pytest configuration for pip_util.py tests

# Test discovery
testpaths = .

# Markers
markers =
    unit: Unit tests for individual functions
    integration: Integration tests for workflows
    e2e: End-to-end tests for complete scenarios

# Output options - extend global config
addopts =
    # Coverage options for pip_util
    --cov=../../../comfyui_manager/common/pip_util
    --cov-report=html:htmlcov_pip_util
    --cov-report=term-missing
    --cov-report=xml:coverage_pip_util.xml
    # Coverage fail threshold
    --cov-fail-under=80

# Coverage configuration
[coverage:run]
source = ../../../comfyui_manager/common
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */test_venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # Standard pragma
    pragma: no cover
    # Don't complain about missing debug code
    def __repr__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @abstractmethod

[coverage:html]
directory = htmlcov

